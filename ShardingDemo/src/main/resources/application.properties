server.port=8080

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 配置真实数据源
spring.shardingsphere.datasource.names=m1

# 配置第 1 个数据源
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/localhost?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456

# 指定表的分布情况 配置表在哪个数据库里，表名是什么。水平分表，分两个表：m1.employees_1,m1.employees_2
spring.shardingsphere.sharding.tables.employees.actual-data-nodes=m1.employees_$->{1..2}

# 指定表的主键生成策略
spring.shardingsphere.sharding.tables.employees.key-generator.column=id
spring.shardingsphere.sharding.tables.employees.key-generator.type=SNOWFLAKE
#雪花算法的一个可选参数
spring.shardingsphere.sharding.tables.employees.key-generator.props.worker.id=1

#指定分片策略 约定cid值为偶数添加到course_1表。如果是奇数添加到course_2表。
# 选定计算的字段
spring.shardingsphere.sharding.tables.employees.table-strategy.inline.sharding-column=id
# 根据计算的字段算出对应的表名。
spring.shardingsphere.sharding.tables.employees.table-strategy.inline.algorithm-expression=course_$->{id%2+1}

# 打开sql日志输出。
spring.shardingsphere.props.sql.show=true

# 允许存在相同名称的 bean，如果存在相同名称的bean，则将使用最后一个定义的 bean
spring.main.allow-bean-definition-overriding=true




