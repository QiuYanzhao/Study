# 配置真实数据源
spring.shardingsphere.datasource.names=m1,m2

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/localhost?serverTimezone=UTC
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456

spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/localhost1?serverTimezone=UTC
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=123456

# 指定表的分布情况
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m$->{1..2}.course_$->{1..2}
# 主键生成策略
spring.shardingsphere.sharding.tables.course.key-generator.column=id
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key-generator.props.worker.id=1

# 配置分片策略
# 基础分片策略 inline
## 分库
spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=m$->{id%2+1}
## 分表
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{((id+1)%4).intdiv(2)}


# 只支持单分片键的标准分片策略 standard
spring.shardingsphere.sharding.tables.course.database-strategy.standard.sharding-column=id
## 精准分片策略
spring.shardingsphere.sharding.tables.course.table-strategy.standard.precise-algorithm-class-name=
## 范围分片策略
spring.shardingsphere.sharding.tables.course.table-strategy.standard.range-algorithm-class-name=


# 支持多分片键的复杂分片策略
spring.shardingsphere.sharding.tables.course.database-strategy.standard.sharding-columns=

spring.shardingsphere.props.sql.show=true
